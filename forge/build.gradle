plugins {
    id "multiloader-loader"
    id "net.minecraftforge.gradle" version "[6.0.24,6.2)"
    id "org.spongepowered.mixin" version "0.7.+"
    id "com.hypherionmc.modutils.modpublisher" version "2.+"
}

mixin {
    config("${mod_id}.mixins.json")
    config("${mod_id}-forge.mixins.json")
}

jar {
    manifest {
        attributes["MixinConfigs"] = "${mod_id}.mixins.json,${mod_id}-forge.mixins.json"
    }
}

minecraft {
    mappings channel: "official", version: mc_version

    copyIdeResources = true

    reobf = false

    def at = file("src/main/resources/META-INF/accesstransformer.cfg")
    if (at.exists()) {
        accessTransformer = at
    }

    runs {
        client {
            workingDirectory file("run")
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName "runClient"
            mods {
                modClientRun {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory file("run-server")
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName "runServer"
            mods {
                modServerRun {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory file("run-data")
            ideaModule "${rootProject.name}.${project.name}.main"
            args "--mod", mod_id, "--all", "--output", file("src/main/generated/"), "--existing", file("src/main/resources/")
            taskName "runData"
            mods {
                modDataRun {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources.srcDir project(":common").file("src/main/generated").absolutePath

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
    annotationProcessor("org.spongepowered:mixin:0.8.5-SNAPSHOT:processor")

    implementation("maven.modrinth:scabbard:${scab_version}+forge")
    implementation(fg.deobf("com.github.glitchfiend:TerraBlender-forge:${mc_version}-${tb_version}"))
    api(fg.deobf("me.shedaniel.cloth:cloth-config-forge:${cloth_version}"))

    implementation("net.sf.jopt-simple:jopt-simple:5.0.4") { version { strictly "5.0.4" } }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            fg.component(it)
        }
    }
}

sourceSets.each {
    def dir = layout.buildDirectory.dir("sourcesSets/$it.name")
    it.output.resourcesDir = dir
    it.java.destinationDirectory = dir
}

publisher {
    apiKeys {
        modrinth System.getenv("MODRINTH_TOKEN")
        curseforge System.getenv("CURSEFORGE_TOKEN")
    }
    setCurseID("$curseforge_id")
    setModrinthID("$modrinth_id")
    setVersionType("$release_type")
    setChangelog(projectDir.toPath().parent.resolve("CHANGELOG.md").toFile().readLines().join("\n"))

    setDisplayName("$mod_name ${project.version} [Forge]")
    setVersion("${mod_version}+forge")
    setGameVersions("$mc_version")
    setLoaders("forge")

    setArtifact(jar)
    addAdditionalFile(sourcesJar)
    setCurseEnvironment("both")

    curseDepends {
        required "scabbard", "cloth-config", "terrablender-forge"
    }
    modrinthDepends {
        required "scabbard", "cloth-config", "terrablender"
    }
}