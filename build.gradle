plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.10.+" apply false
}

architectury.minecraft = mc_version

subprojects {
    apply plugin: "idea"
    apply plugin: "java"
    apply plugin: "maven-publish"
    apply plugin: "architectury-plugin"
    apply plugin: "dev.architectury.loom"

    base.archivesName = "${mod_id}-${project.name}"
    version = "${mc_version}-${mod_version}"
    group = mod_group

    loom {
        silentMojangMappingsLicense()
        accessWidenerPath = project(":common").file("src/main/resources/${mod_id}.accesswidener")
    }

    repositories {
        maven { url = "https://maven.parchmentmc.org/" }
        maven { url = "https://maven.shedaniel.me/" }
        maven { url = "https://maven.minecraftforge.net/" }

        // JEI
        maven { url = "https://dvs1.progwml6.com/files/maven/" } // Required for 1.18.2 - 1.20.2
        maven { url = "https://maven.blamejared.com/" }
        maven { url = "https://modmaven.dev" }
    }

    dependencies {
        minecraft "com.mojang:minecraft:${mc_version}"
        mappings loom.layered() {
            officialMojangMappings()
            parchment "org.parchmentmc.data:parchment-${mc_version}:${parch_version}@zip"
//            parchment "org.parchmentmc.data:parchment-___:${parch_version}@zip"
        }

        modRuntimeOnly "mezz.jei:jei-${mc_version}-${project.name}:${jei_version}"
        modImplementation "com.github.glitchfiend:TerraBlender-${project.name}:${mc_version}-${tb_version}"
    }

    sourceSets.main.resources.srcDir "src/main/generated"

    tasks.named("processResources", ProcessResources).configure {
        var replaceProperties = [
                mc_version   : mc_version,    mc_range       : mc_range,    fabric_loader: fabric_loader,
                neo_version  : neo_version,   neo_range      : neo_range,   arch_version : arch_version,
                tb_version   : tb_version,    mod_id         : mod_id,      mod_group    : mod_group,
                mod_name     : mod_name,      mod_version    : mod_version, mod_authors  : mod_authors,
                mod_license  : mod_license,   mod_description: mod_description,
                homepage_url : homepage_url,  source_url     : source_url,  issue_url    : issue_url
        ]
        inputs.properties replaceProperties
        filesMatching(["pack.mcmeta", "fabric.mod.json", "META-INF/neoforge.mods.toml"]) {
            expand replaceProperties + [project: project]
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 21
    }

    java.withSourcesJar()

    publishing {
        publications {
            register("mavenJava", MavenPublication) {
                groupId = mod_group
                artifactId = mod_id + "-" + project.name
                version = mod_version
                from components.java
            }
        }

        repositories {
            maven {
                url = layout.buildDirectory.dir("${source_url}")
            }
        }
    }
}